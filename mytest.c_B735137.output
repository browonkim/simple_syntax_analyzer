 int		shift int
 int		reduce type_specifier -> int
 int a		shift a
 int a		reduce declaration_specifiers -> type_specifier
 int a		reduce direct_declarator -> identifier
 int a ;		shift ;
 int a ;		reduce declarator -> direct_declarator
 int a ;		reduce init_declarator -> declarator
 int a ;		reduce init_declarator_list -> init_declarator
 int a ;		reduce declaration -> declaration_specifiers init_declaratior_list;
		reduce external_declaration -> declaration
		reduce translation_unit -> external_declaration
 char		shift char
 char		reduce type_specifier -> char
 char *		shift * 
 char *		reduce declaration_specifiers -> type_specifier
 char * str		shift str
 char * str		reduce pointer -> *
 char * str		reduce direct_declarator -> identifier
 char * str ;		shift ;
 char * str ;		reduce declarator -> pointer direct_declarator
 char * str ;		reduce init_declarator -> declarator
 char * str ;		reduce init_declarator_list -> init_declarator
 char * str ;		reduce declaration -> declaration_specifiers init_declaratior_list;
		reduce external_declaration -> declaration
		reduce translation_unit -> translation_unit external_declaration
 float		shift float
 float		reduce type_specifier -> float
 float f		shift f
 float f		reduce declaration_specifiers -> type_specifier
 float f		reduce direct_declarator -> identifier
 float f [		shift [ 
 float f [ 10		shift 10
 float f [ 10		reduce primary_expression -> constant 
 float f [ 10		reduce postfix_expression -> primary_expression 
 float f [ 10 ]		shift ] 
 float f [ 10 ]		reduce unary_expression -> postfix_expression
 float f [ 10 ]		reduce cast_expression -> unary_expression
 float f [ 10 ]		reduce multiplicative_expression -> cast_expression
 float f [ 10 ]		reduce additive_expression -> multiplicative_expression
 float f [ 10 ]		reduce shift_expression -> additive_expression
 float f [ 10 ]		reduce relational_expression -> shift_expression
 float f [ 10 ]		reduce equality_expression -> relational_expression
 float f [ 10 ]		reduce and_expression -> equality_expression
 float f [ 10 ]		reduce exclusive_or_expression -> and_expression
 float f [ 10 ]		reduce inclusive_or_expression -> exclusive_or_expression
 float f [ 10 ]		reduce logical_and_expression -> inclusive_or_expression
 float f [ 10 ]		reduce logical_or_expression -> logical_and_expression
 float f [ 10 ]		reduce conditional_expression -> logical_or_expression
 float f [ 10 ]		reduce constant_expression -> conditional_expression
 float f [ 10 ]		reduce direct_declarator -> direct_declarator [constant_expression]
 float f [ 10 ] ;		shift ;
 float f [ 10 ] ;		reduce declarator -> direct_declarator
 float f [ 10 ] ;		reduce init_declarator -> declarator
 float f [ 10 ] ;		reduce init_declarator_list -> init_declarator
 float f [ 10 ] ;		reduce declaration -> declaration_specifiers init_declaratior_list;
		reduce external_declaration -> declaration
		reduce translation_unit -> translation_unit external_declaration
 int		shift int
 int		reduce type_specifier -> int
 int myFunction		shift myFunction
 int myFunction		reduce declaration_specifiers -> type_specifier
 int myFunction		reduce direct_declarator -> identifier
 int myFunction (		shift ( 
 int myFunction ( char		shift char
 int myFunction ( char		reduce type_specifier -> char
 int myFunction ( char *		shift * 
 int myFunction ( char *		reduce declaration_specifiers -> type_specifier
 int myFunction ( char * a		shift a
 int myFunction ( char * a		reduce pointer -> *
 int myFunction ( char * a		reduce direct_declarator -> identifier
 int myFunction ( char * a )		shift ) 
 int myFunction ( char * a )		reduce declarator -> pointer direct_declarator
 int myFunction ( char * a )		reduce parameter_declaration -> declaration_specifiers declarator
 int myFunction ( char * a )		reduce parameter_list -> parameter_declaration
 int myFunction ( char * a )		reduce parameter_type_list -> parameter_list
 int myFunction ( char * a )		reduce direct_declarator -> direct_declarator(parameter_type_list)
 int myFunction ( char * a ) ;		shift ;
 int myFunction ( char * a ) ;		reduce declarat